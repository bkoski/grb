<% if @recently_closed_issues.present? || @recent_commits.present? %>
  <a class="completed-work-toggle" href="#">
    <% if @recently_closed_issues.present? %>
      <%= pluralize @recently_closed_issues.length, 'issue' %> closed today<%= ',' if @recent_commits.present? %>
    <% end %>
    <%= pluralize @recent_commits.length, 'commit' if @recent_commits.present? %> &raquo;
  </a>
<% end %>

<div style="clear: both;"></div>

<div id="issues-closed-grouping" class="grouping">
  <h3>Closed Today</h3>
  <div id="issues-closed-today" class="issues not-sortable"></div>
</div>

<% if @other_commits.present? %>
  <div id="other-commits-grouping" class="grouping">
    <h3>Other Commits</h3>
    <div id="other-commits" class="commits">
      <% @other_commits.each do |commit| %>
        <div class="commit">
          <div class="author"><div class="avatar contributor-<%= commit.author %>" style="display: inline-block; height: 15px; "></div><%= commit.author %></div>
          <div class="title"><a href="<%= commit.url %>" target="_blank"><%= commit.message %></a></div>
        </div>
      <% end %>
    </div>
  </div>
<% end %>

<div class="grouping">
  <h3>In Progress</h3>
  <div id="in-progress-issues" class="issues not-sortable"></div>
</div>

<div class="grouping">
  <h3>Priority</h3>
  <div id="priority-issues" class="issues"></div>
</div>

<div class="grouping">
  <h3>TODO <a class="add-issue-trigger" href="#">+</a></h3>
  <div id="todo-list" class="issues"></div>
</div>


<script>
 $('.container').addClass('hide-completed-work');

 window.issuesCollection       = new IssuesCollection(<%= @issues.map(&:to_broadcast_h).to_json.html_safe %>);
 issuesCollection.masterFilter = function(issue) { console.log(issue.state, issue.milestone); return issue.milestone == <%= params[:title].to_json.html_safe %>; }

 issuesCollection.registerRenderer({
  filter: function(issue) { return issue.state == 'closed'; },
  target_el: '#issues-closed-today',
  template_name: 'issue',
  template_opts: {
    showCommits: true
  }
 });

 issuesCollection.registerRenderer({
  filter: function(issue) { return issue.in_progress == true && issue.state == 'open' },
  target_el: '#in-progress-issues',
  template_name: 'issue',
  template_opts: {
    showCommits: true,
    actions: ['pause','complete','avatar-reassign']
  }
 });

 issuesCollection.registerRenderer({
  filter: function(issue) { return issue.in_progress == false && issue.priority == true && issue.state == 'open' },
  target_el: '#priority-issues',
  template_name: 'issue',
  template_opts: {
    actions: ['start','avatar-reassign']
  }
 });

 issuesCollection.registerRenderer({
  filter: function(issue) { return issue.in_progress == false && issue.priority == false && issue.state == 'open' },
  target_el: '#todo-list',
  template_name: 'issue',
  template_opts: {
    actions: ['start','avatar-reassign']
  }
 });


 issuesCollection.triggerUpdate();

$(document).on('click', '.add-issue-trigger', function() {
  $('#add-issue-modal').openModal({ starting_top: '1%' });
  $('#add-issue-modal input').focus();
});

$(document).on('click', '#add-issue-modal .btn', function(e) {
  if($(e.currentTarget).hasClass('disabled')) {
    return;
  }

  $(e.currentTarget).addClass('disabled');
  $.ajax('/issues', {
    method: 'POST',
    data: $('#add-issue-modal form').serialize(),
    error: function() {
      alert('Save failed');
      $(e.currentTarget).removeClass('disabled');
    },
    success: function() {
      $(e.currentTarget).removeClass('disabled');
      $('#add-issue-modal input, #add-issue-modal textarea').val('');
      $('#add-issue-modal .item-select label').removeClass('active');
      $('#add-issue-modal').closeModal();
    }
  });
});

  $('.modal-trigger').leanModal({
      dismissible: true, // Modal can be dismissed by clicking outside of the modal
      opacity: .5, // Opacity of modal background
      in_duration: 300, // Transition in duration
      out_duration: 200, // Transition out duration
      ready: function() { alert('Ready'); }, // Callback for Modal open
      complete: function() { alert('Closed'); }, // Callback for Modal close
      starting_top: '1%'
    }
  );
      
</script>

<%= render partial: 'components/reassign_modal' %>


<div id="add-issue-modal" class="modal">
  <div class="modal-content">
  
      <form>
        <div class="row">
          <h5 class="col s12">New Issue - <%= params[:title] %></h5>
        </div>
        
        <div class="row">
          <div class="input-field col s12">
            <input name="title" type="text">
            <label for="title">Title</label>
          </div>
        </div>

        <div class="row">
          <div class="input-field col s12">
            <textarea name="description" class="materialize-textarea"></textarea>
            <label for="description">Description</label>
          </div>
        </div>


        <div class="row">
          <div class="col s12 item-select">
            <input name="repo" type="hidden" />
            <span class="title">Repo</span>
            <% @milestone.repos.each do |repo_name| %>
              <label for="repo" ><%= repo_name %></label>
            <% end %>
          </div>
        </div>

        <div class="row">
          <div class="col s12 item-select">
            <input name="assignee" type="hidden" />
            <span class="title">Assigned To</span>
            <% @milestone.contributors.each do |contributor| %>
              <label for="assignee"><%= contributor %></label>
            <% end %>
          </div>
        </div>

        <div class="row">
          <div class="col s12">
            <a class="waves-effect waves-default btn btn-small grey darken-1">Add</a>
            <a class="waves-effect waves-default btn btn-small grey lighten-1">Low Priority <i class="material-icons right">vertical_align_bottom</i></a>
          </div>
        </div>

      </form>


  </div>
</div>
